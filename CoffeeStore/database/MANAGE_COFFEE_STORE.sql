CREATE DATABASE MANAGE_COFFEE_STORE;

USE MANAGE_COFFEE_STORE;

--CREATE TABLES

CREATE TABLE CLASSIFY (
	CLASSIFY_ID CHAR(5) NOT NULL,
	CLASSIFY_NAME VARCHAR(50) NOT NULL
)

ALTER TABLE CLASSIFY ADD CONSTRAINT C_CLASSIFY_ID_PK PRIMARY KEY (CLASSIFY_ID);

CREATE TABLE PRODUCT (
	CLASSIFY_ID CHAR(5) NOT NULL,
	PRODUCT_ID CHAR(5) NOT NULL,
	PRODUCT_NAME VARCHAR(100) NOT NULL,
	PRODUCT_NICKNAME VARCHAR(50) NOT NULL,
	PRODUCT_STATUS CHAR(4) CHECK (PRODUCT_STATUS IN ('HOT', 'COLD', 'BOTH')) NOT NULL,
	PRODUCT_BUSINESS BIT NOT NULL,
)

ALTER TABLE PRODUCT ADD CONSTRAINT P_PRODUCT_ID_PK PRIMARY KEY (PRODUCT_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT P_CLASSIFY_ID_FK FOREIGN KEY (CLASSIFY_ID) REFERENCES CLASSIFY (CLASSIFY_ID);


CREATE TABLE PRODUCT_SIZE (
	PRODUCT_ID CHAR(5) NOT NULL,
	PRODUCT_SIZE CHAR(1) CHECK (PRODUCT_SIZE IN ('S', 'M', 'L')) NOT NULL,
	PRODUCT_PRICE MONEY NOT NULL,
)

ALTER TABLE PRODUCT_SIZE ADD CONSTRAINT PS_PRODUCT_ID_PRODUCT_SIZE_PK PRIMARY KEY (PRODUCT_ID, PRODUCT_SIZE);
ALTER TABLE PRODUCT_SIZE ADD CONSTRAINT PS_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

CREATE TABLE TOPPING (
	TOPPING_ID CHAR(5) NOT NULL,
	TOPPING_NAME VARCHAR(50) NOT NULL,
	TOPPING_PRICE MONEY NOT NULL,
	TOPPING_BUSINESS BIT NOT NULL
)

ALTER TABLE TOPPING ADD CONSTRAINT TP_TOPPING_ID_PK PRIMARY KEY (TOPPING_ID);

CREATE TABLE PRODUCT_TOPPING (
	PRODUCT_ID CHAR(5) NOT NULL,
	TOPPING_ID CHAR(5) NOT NULL
)

ALTER TABLE PRODUCT_TOPPING ADD CONSTRAINT PT_PRODUCT_ID_TOPPING_ID_PK PRIMARY KEY (PRODUCT_ID, TOPPING_ID);
ALTER TABLE PRODUCT_TOPPING ADD CONSTRAINT PT_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);
ALTER TABLE PRODUCT_TOPPING ADD CONSTRAINT PT_TOPPING_ID_FK FOREIGN KEY (TOPPING_ID) REFERENCES TOPPING (TOPPING_ID);

CREATE TABLE BILL (
	BILL_ID CHAR(5) NOT NULL,
	BILL_DATE DATETIME NOT NULL,
	BILL_TOTAL MONEY,
	RECEIVED_MONEY MONEY,
	EXCESS_MONEY MONEY,
	BILL_STATUS BIT,
	STAFF_ID CHAR(5) NOT NULL
)

ALTER TABLE BILL ADD CONSTRAINT B_BILL_ID_PK PRIMARY KEY (BILL_ID);
ALTER TABLE BILL ADD CONSTRAINT B_STAFF_ID_FK FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID);

CREATE TABLE DETAIL_BILL (
	DETAIL_BILL_ID CHAR(10) NOT NULL,
	BILL_ID CHAR(5) NOT NULL,
	PRODUCT_ID CHAR(5) NOT NULL,
	ORDINAL_NUMBER INT NOT NULL,
	QUANTTY INT NOT NULL,
	UNIT_PRICE MONEY
)

ALTER TABLE DETAIL_BILL ADD CONSTRAINT DB_DETAIL_BILL_ID_PK PRIMARY KEY (DETAIL_BILL_ID);
ALTER TABLE DETAIL_BILL ADD CONSTRAINT DB_BILL_ID_FK FOREIGN KEY (BILL_ID) REFERENCES BILL (BILL_ID);
ALTER TABLE DETAIL_BILL ADD CONSTRAINT DB_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

CREATE TABLE DETAILBILL_TOPPING (
	DETAIL_BILL_ID CHAR(10) NOT NULL,
	TOPPING_ID CHAR(5) NOT NULL
)

ALTER TABLE DETAILBILL_TOPPING ADD CONSTRAINT DT_DETAIL_BILL_ID_TOPPING_ID_PK PRIMARY KEY (DETAIL_BILL_ID, TOPPING_ID);
ALTER TABLE DETAILBILL_TOPPING ADD CONSTRAINT DT_DETAIL_BILL_ID_FK FOREIGN KEY (DETAIL_BILL_ID) REFERENCES DETAIL_BILL (DETAIL_BILL_ID);
ALTER TABLE DETAILBILL_TOPPING ADD CONSTRAINT DT_TOPPING_ID_FK FOREIGN KEY (TOPPING_ID) REFERENCES TOPPING (TOPPING_ID);

CREATE TABLE TABLE_IN_STORE (
	TABLE_ID CHAR(5) NOT NULL,
	TABLE_TYPE INT CHECK (TABLE_TYPE IN (2, 4, 8)) NOT NULL,
	TABLE_STATUS BIT NOT NULL
)

ALTER TABLE TABLE_IN_STORE ADD CONSTRAINT TB_TABLE_ID_PK PRIMARY KEY (TABLE_ID);

CREATE TABLE SPOT_BILL (
	BILL_ID CHAR(5) NOT NULL,
	TABLE_ID CHAR(5) NOT NULL
)

ALTER TABLE SPOT_BILL ADD CONSTRAINT SB_BILL_ID_TABLE_ID_PK PRIMARY KEY (BILL_ID, TABLE_ID);
ALTER TABLE SPOT_BILL ADD CONSTRAINT SB_BILL_ID_FK FOREIGN KEY (BILL_ID) REFERENCES BILL (BILL_ID);
ALTER TABLE SPOT_BILL ADD CONSTRAINT SB_TABLE_ID_FK FOREIGN KEY (TABLE_ID) REFERENCES TABLE_IN_STORE (TABLE_ID);

CREATE TABLE STAFF (
	STAFF_ID CHAR(5) NOT NULL,
	STAFF_NAME NVARCHAR(100) NOT NULL,
	STAFF_ADDRESS NVARCHAR(200),
	STAFF_BIRTHDAY DATETIME,
	STAFF_PHONE CHAR(20),
	STAFF_POSITION VARCHAR(50)
)

ALTER TABLE STAFF ADD CONSTRAINT S_STAFF_ID_PK PRIMARY KEY (STAFF_ID);

CREATE TABLE ACCOUNT (
	A_USERNAME VARCHAR(20) NOT NULL,
	A_PASSWORD VARCHAR(20) NOT NULL,
	STAFF_ID CHAR(5) NOT NULL
)

ALTER TABLE ACCOUNT ADD CONSTRAINT ACC_A_USERNAME_PK PRIMARY KEY (A_USERNAME);
ALTER TABLE ACCOUNT ADD CONSTRAINT ACC_STAFF_ID_FK FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID);

--INSERT VALUES FOR TABLES

INSERT INTO CLASSIFY (CLASSIFY_ID, CLASSIFY_NAME) VALUES
	('CL001', 'Coffee'),
	('CL002', 'Tea'),
	('CL003', 'Fruit Juice'),
	('CL004', 'Yogurt'),
	('CL005', 'Smoothie');

INSERT INTO TOPPING (TOPPING_ID, TOPPING_NAME, TOPPING_PRICE, TOPPING_BUSINESS) VALUES
	('TP001', 'Golden Pearl', 6000, 1),
	('TP002', 'Brown Sugar Pearl', 8000, 1),
	('TP003', 'Konjac Caramel Jelly', 8000, 1),
	('TP004', 'Diamond Jelly', 6000, 1),
	('TP005', 'Fruit Diamond Jelly', 6000, 1),
	('TP006', 'Pudding', 6000, 1),
	('TP007', 'Red Bean', 10000, 1),
	('TP008', 'Cookies', 8000, 1),
	('TP009', 'Condensed Milk', 6000, 1);

INSERT INTO PRODUCT (CLASSIFY_ID, PRODUCT_ID, PRODUCT_NAME, PRODUCT_NICKNAME, PRODUCT_STATUS, PRODUCT_BUSINESS) VALUES
	('CL001', 'CF001', 'Traditional Coffe', 'Traditional', 'COLD', '1'),
	('CL001', 'CF002', 'Espresso', 'Espresso', 'HOT', '1'),
	('CL001', 'CF003', 'Lattee', 'Lattee', 'HOT', '1'),
	('CL001', 'CF004', 'Cappuccino', 'Cappuccino', 'HOT', '1'),
	('CL001', 'CF005', 'Mocha', 'Mocha', 'HOT', '1'),
	('CL001', 'CF006', 'Macchiato', 'Macchiato', 'BOTH', '1'),
	('CL001', 'CF007', 'Milk Coffee', 'Milk Coffee', 'BOTH', '1');

INSERT INTO PRODUCT (CLASSIFY_ID, PRODUCT_ID, PRODUCT_NAME, PRODUCT_NICKNAME, PRODUCT_STATUS, PRODUCT_BUSINESS) VALUES
	('CL002', 'TE001', 'Black Tea', 'Black Tea', 'COLD', '1'),
	('CL002', 'TE002', 'Black Tea Latte', 'Black Tea Latte', 'COLD', '1'),
	('CL002', 'TE003', 'Pearl Black Tea', 'Pearl Black Tea', 'COLD', '1'),
	('CL002', 'TE004', 'Peach Tea', 'Peach Tea', 'COLD', '1'),
	('CL002', 'TE005', 'Strawberry Tea', 'Strawberry Tea', 'COLD', '1'),
	('CL002', 'TE006', 'Traditional Milk Tea', 'Traditional MT', 'BOTH', '1'),
	('CL002', 'TE007', 'Golden Pearl Milk Tea', 'Golden Peral MT', 'COLD', '1'),
	('CL002', 'TE008', 'Brown Sugar Milk Tea', 'Brown Sugar MT', 'COLD', '1'),
	('CL002', 'TE009', 'Black Diamond Milk Tea', 'Diamond MT', 'COLD', '1'),
	('CL002', 'TE010', 'Pudding Milk Tea', 'Pudding MT', 'COLD', '1'),
	('CL002', 'TE011', 'Read Bean Milk Tea', 'Red Bean MT', 'COLD', '1'),
	('CL002', 'TE012', 'Strawberry Milk Tea', 'Strawberry MT', 'COLD', '1'),
	('CL002', 'TE013', 'Chocolate Milk Tea', 'Chocolate MT', 'COLD', '1'),
	('CL002', 'TE014', 'Matcha Milk Tea', 'Matcha MT', 'COLD', '1'),
	('CL002', 'TE015', 'Mango Milk Tea', 'Mango MT', 'COLD', '1'),
	('CL002', 'TE016', 'Blueberry Milk Tea', 'Blueberry MT', 'BOTH', '1'),
	('CL002', 'TE017', 'Mix Milk Tea', 'Mix MT', 'COLD', '1'),
	('CL002', 'TE018', 'Taro Milk Tea', 'Taro MT', 'COLD', '1'),
	('CL002', 'TE019', 'Green Milk Tea', 'Green MT', 'COLD', '1'),
	('CL002', 'TE020', 'Coffee Milk Tea', 'Coffee MT', 'COLD', '1'),
	('CL002', 'TE021', 'Japanese Milk Tea', 'Japanese MT', 'COLD', '1');

INSERT INTO PRODUCT (CLASSIFY_ID, PRODUCT_ID, PRODUCT_NAME, PRODUCT_NICKNAME, PRODUCT_STATUS, PRODUCT_BUSINESS) VALUES
	('CL003', 'FJ001', 'Mango Juice', 'Mango Juice', 'COLD', '1'),
	('CL003', 'FJ002', 'Apple Juice', 'Apple Juice', 'COLD', '1'),
	('CL003', 'FJ003', 'Carrot Juice', 'Carrot Juice', 'COLD', '1'),
	('CL003', 'FJ004', 'Guava Juice', 'Guava Juice', 'COLD', '1'),
	('CL003', 'FJ005', 'Orange Juice', 'Orange Juice', 'COLD', '1'),
	('CL003', 'FJ006', 'Squash Juice', 'Squash Juice', 'COLD', '1'),
	('CL003', 'FJ007', 'Pineapple Juice', 'Pineapple Juice', 'COLD', '1'),
	('CL003', 'FJ008', 'Tomato Juice', 'Tomato Juice', 'COLD', '1'),
	('CL003', 'FJ009', 'Strawberry Juice', 'Strawberry Juice', 'COLD', '1'),
	('CL003', 'FJ010', 'Waterlemon Juice', 'Waterlemon Juice', 'COLD', '1');

INSERT INTO PRODUCT (CLASSIFY_ID, PRODUCT_ID, PRODUCT_NAME, PRODUCT_NICKNAME, PRODUCT_STATUS, PRODUCT_BUSINESS) VALUES
	('CL004', 'YG001', 'Orange Yogurt', 'Orange Yogurt', 'COLD', '1'),
	('CL004', 'YG002', 'Mango Yogurt', 'Mango Yogurt', 'COLD', '1'),
	('CL004', 'YG003', 'Lemon Yogurt', 'Lemon Yogurt', 'COLD', '1'),
	('CL004', 'YG004', 'Kumquat Yogurt', 'Kumquat Yogurt', 'COLD', '1'),
	('CL004', 'YG005', 'Passion Fruit Yogurt', 'Passion Fruit YG', 'COLD', '1'),
	('CL004', 'YG006', 'Blueberry Yogurt', 'Blueberry Yogurt', 'COLD', '1'),
	('CL004', 'YG007', 'Mix Yogurt', 'Mix Yogurt', 'COLD', '1'),
	('CL004', 'YG008', 'Berry Yogurt', 'Berry Yogurt', 'COLD', '1'),
	('CL004', 'YG009', 'Pomelo Yogurt', 'Pomelo Yogurt', 'COLD', '1');

INSERT INTO PRODUCT (CLASSIFY_ID, PRODUCT_ID, PRODUCT_NAME, PRODUCT_NICKNAME, PRODUCT_STATUS, PRODUCT_BUSINESS) VALUES
	('CL005', 'SM001', 'Mango Smoothie', 'Mango Smoothie', 'COLD', '1'),
	('CL005', 'SM002', 'Berry Smoothie', 'Berry Smoothie', 'COLD', '1'),
	('CL005', 'SM003', 'Black Diamond Coffee Smoothie', 'Diamond Coffee', 'COLD', '1'),
	('CL005', 'SM004', 'Strawberry Smoothie', 'Strawberry SM', 'COLD', '1'),
	('CL005', 'SM005', 'Matcha Smoothie', 'Matcha Smoothie', 'COLD', '1');

INSERT INTO TABLE_IN_STORE (TABLE_ID, TABLE_TYPE, TABLE_STATUS) VALUES
	('TB001', 2, 1),
	('TB002', 2, 1),
	('TB003', 2, 1),
	('TB004', 2, 1),
	('TB005', 4, 1),
	('TB006', 4, 1),
	('TB007', 4, 1),
	('TB008', 4, 1),
	('TB009', 8, 1),
	('TB010', 8, 1),
	('TB011', 8, 1),
	('TB012', 8, 1);


SELECT * FROM CLASSIFY;
SELECT * FROM PRODUCT;
SELECT * FROM TOPPING;
SELECT * FROM TABLE_IN_STORE;







